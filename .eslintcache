[{"D:\\Cursos\\react-firebase\\eventos\\src\\index.js":"1","D:\\Cursos\\react-firebase\\eventos\\src\\App.js":"2","D:\\Cursos\\react-firebase\\eventos\\src\\view\\login\\index.js":"3","D:\\Cursos\\react-firebase\\eventos\\src\\config\\firebase.js":"4","D:\\Cursos\\react-firebase\\eventos\\src\\view\\new-user\\index.js":"5","D:\\Cursos\\react-firebase\\eventos\\src\\view\\home\\index.js":"6","D:\\Cursos\\react-firebase\\eventos\\src\\components\\navBar\\index.js":"7","D:\\Cursos\\react-firebase\\eventos\\src\\store\\index.js":"8","D:\\Cursos\\react-firebase\\eventos\\src\\store\\userReducer.js":"9","D:\\Cursos\\react-firebase\\eventos\\src\\view\\user-recover-pass\\index.js":"10","D:\\Cursos\\react-firebase\\eventos\\src\\view\\regsiter-eventer\\index.js":"11","D:\\Cursos\\react-firebase\\eventos\\src\\components\\event-card\\index.js":"12","D:\\Cursos\\react-firebase\\eventos\\src\\view\\event-details\\index.js":"13"},{"size":147,"mtime":1609810925272,"results":"14","hashOfConfig":"15"},{"size":1237,"mtime":1611708865323,"results":"16","hashOfConfig":"15"},{"size":2482,"mtime":1610493266121,"results":"17","hashOfConfig":"15"},{"size":437,"mtime":1610499612964,"results":"18","hashOfConfig":"15"},{"size":2906,"mtime":1610066620884,"results":"19","hashOfConfig":"15"},{"size":2216,"mtime":1611101841081,"results":"20","hashOfConfig":"15"},{"size":1810,"mtime":1611101963506,"results":"21","hashOfConfig":"15"},{"size":455,"mtime":1611708960788,"results":"22","hashOfConfig":"15"},{"size":421,"mtime":1610071882975,"results":"23","hashOfConfig":"15"},{"size":1224,"mtime":1610494679563,"results":"24","hashOfConfig":"15"},{"size":6041,"mtime":1611706617110,"results":"25","hashOfConfig":"15"},{"size":1302,"mtime":1611105274757,"results":"26","hashOfConfig":"15"},{"size":4162,"mtime":1611707542532,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"gkw4so",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"30"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"30"},"D:\\Cursos\\react-firebase\\eventos\\src\\index.js",[],["60","61"],"D:\\Cursos\\react-firebase\\eventos\\src\\App.js",[],"D:\\Cursos\\react-firebase\\eventos\\src\\view\\login\\index.js",[],"D:\\Cursos\\react-firebase\\eventos\\src\\config\\firebase.js",[],"D:\\Cursos\\react-firebase\\eventos\\src\\view\\new-user\\index.js",[],"D:\\Cursos\\react-firebase\\eventos\\src\\view\\home\\index.js",["62","63"],"import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport NavBar from '../../components/navBar';\r\nimport EventCard from '../../components/event-card';\r\nimport { Link } from 'react-router-dom';\r\nimport firebase from '../../config/firebase';\r\nimport './home.css';\r\n\r\nfunction Home({ match }) {\r\n    const [events, setEvents] = useState([]);\r\n    const [search, setSearch] = useState('');\r\n    const usuarioEmail = useSelector(state => state.userEmail);\r\n    let listEvents = [];\r\n\r\n    useEffect(() => {\r\n        if (match.params.parametros) {\r\n            firebase.firestore().collection('eventos').where('userEmail', '==', usuarioEmail).get().then(async (result) => {\r\n                await result.docs.forEach(doc => {\r\n                    if (doc.data().titulo.indexOf(search) >= 0) {\r\n                        listEvents.push({\r\n                            id: doc.id,\r\n                            ...doc.data()\r\n                        });\r\n                    }\r\n                })\r\n\r\n                setEvents(listEvents);\r\n            });\r\n        } else {\r\n            firebase.firestore().collection('eventos').get().then(async (result) => {\r\n                await result.docs.forEach(doc => {\r\n                    if (doc.data().titulo.indexOf(search) >= 0) {\r\n                        listEvents.push({\r\n                            id: doc.id,\r\n                            ...doc.data()\r\n                        });\r\n                    }\r\n                })\r\n\r\n                setEvents(listEvents);\r\n            });\r\n        }\r\n    });\r\n\r\n    return (<>\r\n        <NavBar />\r\n\r\n        <div className=\"row p-3\">\r\n            <h2 className=\"mx-auto p-5\">Eventos Publicados</h2>\r\n            <input onChange={(e) => setSearch(e.target.value)} type=\"text\" className=\"form-control text-center\" placeholder=\"Pesquisar...\" />\r\n        </div>\r\n\r\n        <div className=\"row p-3\">\r\n            {events.map(item =>\r\n                <EventCard key={item.id} id={item.id} img={item.foto} titulo={item.titulo} detalhes={item.detalhes} visualizacoes={item.visualizacoes} />\r\n            )\r\n            }\r\n        </div>\r\n    </>);\r\n};\r\n\r\nexport default Home;\r\n","D:\\Cursos\\react-firebase\\eventos\\src\\components\\navBar\\index.js",[],"D:\\Cursos\\react-firebase\\eventos\\src\\store\\index.js",[],"D:\\Cursos\\react-firebase\\eventos\\src\\store\\userReducer.js",[],"D:\\Cursos\\react-firebase\\eventos\\src\\view\\user-recover-pass\\index.js",["64","65"],"import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport NavBar from '../../components/navBar';\r\nimport firebase from '../../config/firebase';\r\nimport 'firebase/auth';\r\nimport './userRecover.css';\r\n\r\nfunction UserRecoverPass() {\r\n    const [email, setEmail] = useState('');\r\n    const [msg, setMsg] = useState('');\r\n\r\n    function recover () {\r\n        firebase.auth().sendPasswordResetEmail(email).then(result => {\r\n            setMsg('Enviamos um link para o seu email, redefina sus senha!');\r\n        }).catch(err => {\r\n            setMsg('Verifique se o email est√° correto')\r\n        });\r\n    }\r\n\r\n    return (<>\r\n        <NavBar />\r\n        <form className=\"text-center form-login mx-auto mt-5\">\r\n            <h3 className=\"mb-3 font-wight-bold\">Recuperar Senha</h3>\r\n            <input onChange={(e) => setEmail(e.target.value)} type=\"email\" className=\"form-control my-2\" placeholder=\"Email\" />\r\n        </form>\r\n\r\n        <div className=\"mgs my-4 text-center\">\r\n            <span>{msg}</span>\r\n        </div>\r\n\r\n        <button onClick={recover} className=\"btn btn-lg btn-block my-2 btn-send\">Recupera Senha</button>\r\n    </>);\r\n}\r\n\r\nexport default UserRecoverPass;\r\n","D:\\Cursos\\react-firebase\\eventos\\src\\view\\regsiter-eventer\\index.js",["66","67","68","69"],"import React, { useState, useEffect } from 'react';\r\nimport Navbar from '../../components/navBar'\r\nimport { useSelector } from 'react-redux';\r\nimport firebase from '../../config/firebase';\r\nimport './register.css';\r\n\r\n\r\nfunction Register(props) {\r\n    const [events, setEvents] = useState({});\r\n    const [urlImg, setUrlImg] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    const [msgTipo, setMsgTipo] = useState('');\r\n    const [titulo, setTitulo] = useState('');\r\n    const [tipo, setTipo] = useState('');\r\n    const [detalhes, setDetalhes] = useState('');\r\n    const [data, setData] = useState('');\r\n    const [hora, setHora] = useState('');\r\n    const [foto, setFoto] = useState('');\r\n    const [fotoAtual, setFotoAtual] = useState('');\r\n    const storage = firebase.storage();\r\n    const db = firebase.firestore();\r\n    const emailUser = useSelector(state => state.userEmail);\r\n\r\n    useEffect(() => {\r\n        if (props.match.params.id) {\r\n            firebase.firestore().collection('eventos').doc(props.match.params.id).get().then(res => {\r\n                setTitulo(res.data().titulo);\r\n                setTipo(res.data().tipo);\r\n                setDetalhes(res.data().detalhes);\r\n                setData(res.data().data);\r\n                setHora(res.data().hora);\r\n                setFotoAtual(res.data().foto);\r\n            });\r\n        }\r\n    }, [loading, props.match.params.id]);\r\n\r\n    function handleEdit() {\r\n        setMsgTipo(null);\r\n        setLoading(true);\r\n\r\n        if (foto) {\r\n            storage.ref(`images/${foto.name}`).put(foto);\r\n            db.collection('eventos').doc(props.match.params.id).update({\r\n                titulo: titulo,\r\n                tipo: tipo,\r\n                detalhes: detalhes,\r\n                data: data,\r\n                hora: hora,\r\n                foto: foto ? foto.name : fotoAtual\r\n            }).then(() => {\r\n                setMsgTipo(\"sucesso\");\r\n                setLoading(false);\r\n            }).catch(err => {\r\n                setMsgTipo('erro');\r\n                setLoading(false);\r\n            });\r\n        }\r\n    }\r\n\r\n    function handleRegister() {\r\n        setMsgTipo(null);\r\n        setLoading(true);\r\n\r\n        storage.ref(`images/${foto.name}`).put(foto).then(() => {\r\n            db.collection('eventos').add({\r\n                titulo: titulo,\r\n                tipo: tipo,\r\n                detalhes: detalhes,\r\n                data: data,\r\n                hora: hora,\r\n                userEmail: emailUser,\r\n                visualizacoes: 0,\r\n                foto: foto.name,\r\n                publico: 1,\r\n                criacao: new Date(),\r\n            }).then(() => {\r\n                setMsgTipo(\"sucesso\");\r\n                setLoading(false);\r\n            }).catch(err => {\r\n                setMsgTipo('erro');\r\n                setLoading(false);\r\n            });\r\n        });\r\n    }\r\n\r\n    return (<>\r\n        <Navbar />\r\n        <div className=\"col-12 mt-5\">\r\n            <div className=\"row\">\r\n                <h3 className=\"mx-auto font-weight-bold\">{props.match.params.id ? \"Editar Evento\" : \"Novo Evento\"}</h3>\r\n            </div>\r\n\r\n            <form>\r\n                <div className=\"form-group\">\r\n                    <label>Titulo: </label>\r\n                    <input onChange={(e) => setTitulo(e.target.value)} type=\"text\" className=\"form-control\" value={titulo ? titulo : \"\"} />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Tipo Evento: </label>\r\n                    <select onChange={(e) => setTipo(e.target.value)} className=\"form-control\" value={tipo ? tipo : \"\"}>\r\n                        <option disabled selected value>-- Selecione um tipo --</option>\r\n                        <option>Festa</option>\r\n                        <option>Teatro</option>\r\n                        <option>Show</option>\r\n                        <option>Evento</option>\r\n                    </select>\r\n                </div>\r\n\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Descri√ß√£o: </label>\r\n                    <textarea onChange={(e) => setDetalhes(e.target.value)} className=\"form-control\" row=\"3\" value={detalhes ? detalhes : \"\"}></textarea>\r\n                </div>\r\n\r\n                <div className=\"form-group row\">\r\n                    <div className=\"col-6\">\r\n                        <label>Data: </label>\r\n                        <input onChange={(e) => setData(e.target.value)} type=\"date\" className=\"form-control\" value={data ? data : \"\"} />\r\n                    </div>\r\n\r\n                    <div className=\"col-6\">\r\n                        <label>Hora: </label>\r\n                        <input onChange={(e) => setHora(e.target.value)} type=\"time\" className=\"form-control\" value={hora ? hora : \"\"} />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Foto: {props.match.params.id ? `(Voc√™ quer manter a foto)` : null}</label>\r\n                    <input onChange={(e) => setFoto(e.target.files[0])} type=\"file\" className=\"form-control\" />\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                    {\r\n                        loading ? <div class=\"spinner-border text-danger mx-auto\" role=\"status\"><span class=\"sr-only\">Loading...</span></div>\r\n                            : <button onClick={props.match.params.id ? handleEdit : handleRegister} type=\"button\" className=\"btn btn-lg btn-block mt-3 mb-5 btn-register\">{props.match.params.id ? \"Editar Evento\" : \"Publicar Evento\"}</button>\r\n                    }\r\n                </div>\r\n            </form>\r\n\r\n            <div className=\"msg-login text-black text-center mt-2\">\r\n                {msgTipo === 'sucesso' && <span><strong>WoW!</strong> Evento publicado! &#128526;</span>}\r\n                {msgTipo === 'erro' && <span><strong>Ops!</strong> N√£o foi poss√≠vel publicar o evento! &#128546;</span>}\r\n            </div>\r\n        </div>\r\n    </>);\r\n}\r\n\r\nexport default Register;","D:\\Cursos\\react-firebase\\eventos\\src\\components\\event-card\\index.js",["70"],"import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport firebase from '../../config/firebase';\r\nimport './eventCard.css';\r\n\r\nfunction EventCard({key, id, img, titulo, detalhes, visualizacoes}) {\r\n    const [urlImage, setUrlImage] = useState('');\r\n\r\n    useEffect(() => {\r\n        firebase.storage().ref(`images/${img}`).getDownloadURL().then(url => {\r\n            setUrlImage(url);\r\n        });\r\n    }, [urlImage]);\r\n\r\n    return (<>\r\n        <div className=\"col-md-3 col-sm-12\">\r\n            <img src={urlImage} className=\"card-img-top img-card\" alt=\"Imagem do Evento\" />\r\n\r\n            <div className=\"card-body\">\r\n                <h5>{titulo}</h5>\r\n                <p className=\"card-text text-justify\">{detalhes}</p>\r\n\r\n                <div className=\"row footer-card d-flex aling-items-center\">\r\n                    <div className=\"col-6\">\r\n                        <Link className=\"btn btn-sm btn-details\" to={\"/eventsdetails/\" + id}>+ detalhes</Link>\r\n                    </div>\r\n\r\n                    <div className=\"col-6 text-right\">\r\n                        <i class=\"fas fa-eye\"></i> <span>{visualizacoes}</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </>);\r\n}\r\n\r\nexport default EventCard;\r\n","D:\\Cursos\\react-firebase\\eventos\\src\\view\\event-details\\index.js",["71"],"import React, { useState, useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport firebase from '../../config/firebase';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport Navbar from '../../components/navBar'\r\nimport './eventDetails.css';\r\n\r\nfunction EventDetails(props) {\r\n    const [events, setEvents] = useState({});\r\n    const [urlImg, setUrlImg] = useState('');\r\n    const [loading, setLoading] = useState(1);\r\n    const [deleted, setDeleted] = useState(0);\r\n    const user = useSelector(state => state.userEmail)\r\n\r\n    useEffect(() => {\r\n        if (loading) {\r\n            firebase.firestore().collection('eventos').doc(props.match.params.id).get().then(res => {\r\n                setEvents(res.data());\r\n                firebase.firestore().collection('eventos').doc(props.match.params.id).update('visualizacoes', res.data().visualizacoes + 1);\r\n                firebase.storage().ref(`images/${res.data().foto}`).getDownloadURL().then(url => {\r\n                    setUrlImg(url);\r\n                    setLoading(0);\r\n                });\r\n            });\r\n        }else {\r\n            firebase.storage().ref(`images/${events.foto}`).getDownloadURL().then(url => setUrlImg(url));\r\n        }\r\n    }, []);\r\n\r\n    function handleDelete() {\r\n        firebase.firestore().collection('eventos').doc(props.match.params.id).delete().then(() => {\r\n            setDeleted(1)\r\n        });\r\n    }\r\n\r\n    return (<>\r\n        <Navbar />\r\n\r\n        {deleted > 0 ? <Redirect to='/' /> : null}\r\n\r\n        <div className=\"container-fluid\">\r\n            {loading\r\n                ?\r\n                <div className=\"row\"><div class=\"spinner-border text-danger mx-auto\" role=\"status\"><span class=\"sr-only\"></span></div></div>\r\n                :\r\n                <div>\r\n                    <div className=\"row\">\r\n\r\n                        <img src={urlImg} alt=\"Banner\" className=\"img-banner\" />\r\n                        <div className=\"col-12 text-right\">\r\n                            <i class=\"fas fa-eye\"></i> <span>{events.visualizacoes + 1}</span>\r\n                        </div>\r\n\r\n                        <h3 className=\"mx-auto mt-5 titulo\"><strong>{events.titulo}</strong></h3>\r\n                    </div>\r\n\r\n                    <div className=\"row mt-5 d-flex justify-content-around\">\r\n                        <div className=\"col-md-3 col-sm-12 box-info p-3 my2\">\r\n                            <i className=\"fas fa-ticket-alt fa-2x\"></i>\r\n                            <h5><strong>Tipo</strong></h5>\r\n                            <span className=\"mt-3\">{events.tipo}</span>\r\n                        </div>\r\n\r\n                        <div className=\"col-md-3 col-sm-12 box-info p-3 my2\">\r\n                            <i className=\"fas fa-calendar-alt fa-2x\"></i>\r\n                            <h5><strong>Data</strong></h5>\r\n                            <span className=\"mt-3\">{events.data}</span>\r\n                        </div>\r\n\r\n                        <div className=\"col-md-3 col-sm-12 box-info p-3 my2\">\r\n                            <i className=\"fas fa-clock fa-2x\"></i>\r\n                            <h5><strong>Hora</strong></h5>\r\n                            <span className=\"mt-3\">{events.hora}</span>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"row box-details mt-5\">\r\n                        <div className=\"col-12 text-center\">\r\n                            <h5><strong>Detalhes do Evento</strong></h5>\r\n                        </div>\r\n\r\n                        <div className=\"col-12 text-center\">\r\n                            <p>{events.detalhes}</p>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {user === events.userEmail ? <Link className=\"btn-edit\" to={`/editevent/${props.match.params.id}`}><i className=\"fas fa-pen-square fa-3x\"></i></Link> : \"\"}\r\n                    {user === events.userEmail ? <button onClick={handleDelete}  type=\"button\" className=\"btn btn-lg btn-block mt-3 mb-5 btn-register\">Remover Evento</button> : \"\"}\r\n                </div>\r\n            }\r\n        </div>\r\n    </>);\r\n}\r\n\r\nexport default EventDetails\r\n",{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","severity":1,"message":"77","line":2,"column":10,"nodeType":"78","messageId":"79","endLine":2,"endColumn":21},{"ruleId":"76","severity":1,"message":"80","line":5,"column":10,"nodeType":"78","messageId":"79","endLine":5,"endColumn":14},{"ruleId":"76","severity":1,"message":"77","line":2,"column":10,"nodeType":"78","messageId":"79","endLine":2,"endColumn":21},{"ruleId":"76","severity":1,"message":"81","line":2,"column":23,"nodeType":"78","messageId":"79","endLine":2,"endColumn":34},{"ruleId":"76","severity":1,"message":"82","line":9,"column":12,"nodeType":"78","messageId":"79","endLine":9,"endColumn":18},{"ruleId":"76","severity":1,"message":"83","line":9,"column":20,"nodeType":"78","messageId":"79","endLine":9,"endColumn":29},{"ruleId":"76","severity":1,"message":"84","line":10,"column":12,"nodeType":"78","messageId":"79","endLine":10,"endColumn":18},{"ruleId":"76","severity":1,"message":"85","line":10,"column":20,"nodeType":"78","messageId":"79","endLine":10,"endColumn":29},{"ruleId":"86","severity":1,"message":"87","line":13,"column":8,"nodeType":"88","endLine":13,"endColumn":18,"suggestions":"89"},{"ruleId":"86","severity":1,"message":"90","line":28,"column":8,"nodeType":"88","endLine":28,"endColumn":10,"suggestions":"91"},"no-native-reassign",["92"],"no-negated-in-lhs",["93"],"no-unused-vars","'useDispatch' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'useSelector' is defined but never used.","'events' is assigned a value but never used.","'setEvents' is assigned a value but never used.","'urlImg' is assigned a value but never used.","'setUrlImg' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'img'. Either include it or remove the dependency array.","ArrayExpression",["94"],"React Hook useEffect has missing dependencies: 'events.foto', 'loading', and 'props.match.params.id'. Either include them or remove the dependency array.",["95"],"no-global-assign","no-unsafe-negation",{"desc":"96","fix":"97"},{"desc":"98","fix":"99"},"Update the dependencies array to be: [img, urlImage]",{"range":"100","text":"101"},"Update the dependencies array to be: [events.foto, loading, props.match.params.id]",{"range":"102","text":"103"},[449,459],"[img, urlImage]",[1239,1241],"[events.foto, loading, props.match.params.id]"]